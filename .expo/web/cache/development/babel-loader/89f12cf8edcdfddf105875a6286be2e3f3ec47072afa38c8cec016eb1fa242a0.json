{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport IndexHeader from \"../components/indexheader\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { style } from \"../stylesheets/indexstyle\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ExerciseCard from \"../components/trainingexercisecard\";\nimport PageTitle from \"../components/pagetitle\";\nimport { useFonts } from \"expo-font\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Index(_ref) {\n  var navigation = _ref.navigation;\n  var curDate = new Date();\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLogged = _useState2[0],\n    setIsLogged = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isMenuVisible = _useState4[0],\n    setMenuVisibility = _useState4[1];\n  function changeMenuVisibility() {\n    setMenuVisibility(!isMenuVisible);\n  }\n  function changeMenuVisibilityWhenUnFocus() {\n    setMenuVisibility(false);\n  }\n  var _useFonts = useFonts({\n      'ProDunex': require(\"../assets/fonts/ProDunex/pro-dunex-52272284/Pro-Dunex-Regular.otf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    loadedfonts = _useFonts2[0];\n  if (isLogged) {\n    return _jsxs(TouchableOpacity, {\n      style: [style.main],\n      onPress: changeMenuVisibilityWhenUnFocus,\n      children: [_jsx(IndexHeader, {\n        menu: navigation,\n        showMenu: isMenuVisible,\n        changeMenu: changeMenuVisibility\n      }), _jsx(PageTitle, {\n        text: \"Welcome again\"\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: style.slider_title,\n          children: \"Exercises for today\"\n        }), _jsx(View, {\n          style: style.slider,\n          children: _jsx(ExerciseCard, {})\n        })]\n      })]\n    });\n  }\n}","map":{"version":3,"names":["IndexHeader","useState","View","TouchableOpacity","style","Text","ExerciseCard","PageTitle","useFonts","jsx","_jsx","jsxs","_jsxs","Index","_ref","navigation","curDate","Date","_useState","_useState2","_slicedToArray","isLogged","setIsLogged","_useState3","_useState4","isMenuVisible","setMenuVisibility","changeMenuVisibility","changeMenuVisibilityWhenUnFocus","_useFonts","require","_useFonts2","loadedfonts","main","onPress","children","menu","showMenu","changeMenu","text","slider_title","slider"],"sources":["/home/ivaylokartev/SL-devel/Frontend-Mobile/pages/uindex.tsx"],"sourcesContent":["import IndexHeader from \"../components/indexheader\";\nimport { useState, useEffect } from \"react\";\nimport { View, TouchableOpacity, TouchableWithoutFeedback, ScrollView } from \"react-native\";\nimport { style } from \"../stylesheets/indexstyle\";\nimport { Text } from \"react-native\";\nimport ExerciseCard from \"../components/trainingexercisecard\";\nimport PageTitle from \"../components/pagetitle\";\nimport { useFonts } from \"expo-font\";\n\nexport default function Index({navigation} : any) {\n\n    const curDate = new Date();\n\n    const [isLogged, setIsLogged] = useState(true);\n\n    const [isMenuVisible, setMenuVisibility] = useState(false);\n\n    function changeMenuVisibility() {\n        setMenuVisibility(!isMenuVisible)\n    }\n\n    function changeMenuVisibilityWhenUnFocus() {\n        setMenuVisibility(false)\n    }\n\n    const [loadedfonts] = useFonts({\n        'ProDunex' : require('../assets/fonts/ProDunex/pro-dunex-52272284/Pro-Dunex-Regular.otf')\n    });\n\n    if(isLogged) {\n        return (\n            <TouchableOpacity style={[style.main]} onPress={changeMenuVisibilityWhenUnFocus}>\n                <IndexHeader menu={navigation} showMenu={isMenuVisible} changeMenu={changeMenuVisibility}/>\n                <PageTitle text='Welcome again'></PageTitle>\n                <View>\n                    <Text style={style.slider_title}>Exercises for today</Text>\n                    <View style={style.slider}>\n                        <ExerciseCard></ExerciseCard>\n                    </View>\n                </View>\n            </TouchableOpacity>\n        )\n    }\n}"],"mappings":";AAAA,OAAOA,WAAW;AAClB,SAASC,QAAQ,QAAmB,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAE5C,SAASC,KAAK;AAAoC,OAAAC,IAAA;AAElD,OAAOC,YAAY;AACnB,OAAOC,SAAS;AAChB,SAASC,QAAQ,QAAQ,WAAW;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErC,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAAqB;EAAA,IAAnBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAErC,IAAMC,OAAO,GAAG,IAAIC,IAAI,CAAC,CAAC;EAE1B,IAAAC,SAAA,GAAgCjB,QAAQ,CAAC,IAAI,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5B,IAAAI,UAAA,GAA2CtB,QAAQ,CAAC,KAAK,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAnDE,aAAa,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EAEvC,SAASG,oBAAoBA,CAAA,EAAG;IAC5BD,iBAAiB,CAAC,CAACD,aAAa,CAAC;EACrC;EAEA,SAASG,+BAA+BA,CAAA,EAAG;IACvCF,iBAAiB,CAAC,KAAK,CAAC;EAC5B;EAEA,IAAAG,SAAA,GAAsBrB,QAAQ,CAAC;MAC3B,UAAU,EAAGsB,OAAO,oEAAoE;IAC5F,CAAC,CAAC;IAAAC,UAAA,GAAAX,cAAA,CAAAS,SAAA;IAFKG,WAAW,GAAAD,UAAA;EAIlB,IAAGV,QAAQ,EAAE;IACT,OACIT,KAAA,CAACT,gBAAgB;MAACC,KAAK,EAAE,CAACA,KAAK,CAAC6B,IAAI,CAAE;MAACC,OAAO,EAAEN,+BAAgC;MAAAO,QAAA,GAC5EzB,IAAA,CAACV,WAAW;QAACoC,IAAI,EAAErB,UAAW;QAACsB,QAAQ,EAAEZ,aAAc;QAACa,UAAU,EAAEX;MAAqB,CAAC,CAAC,EAC3FjB,IAAA,CAACH,SAAS;QAACgC,IAAI,EAAC;MAAe,CAAY,CAAC,EAC5C3B,KAAA,CAACV,IAAI;QAAAiC,QAAA,GACDzB,IAAA,CAACL,IAAI;UAACD,KAAK,EAAEA,KAAK,CAACoC,YAAa;UAAAL,QAAA,EAAC;QAAmB,CAAM,CAAC,EAC3DzB,IAAA,CAACR,IAAI;UAACE,KAAK,EAAEA,KAAK,CAACqC,MAAO;UAAAN,QAAA,EACtBzB,IAAA,CAACJ,YAAY,IAAe;QAAC,CAC3B,CAAC;MAAA,CACL,CAAC;IAAA,CACO,CAAC;EAE3B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport IndexHeader from \"../components/indexheader\";\nimport { useState } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { style } from \"../stylesheets/indexstyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Index(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLogged = _useState2[0],\n    setIsLogged = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isMenuVisible = _useState4[0],\n    setMenuVisibility = _useState4[1];\n  function changeMenuVisibility() {\n    if (isMenuVisible) setMenuVisibility(!isMenuVisible);\n  }\n  if (isLogged) {\n    return _jsx(TouchableOpacity, {\n      style: [style.main],\n      onPress: changeMenuVisibility,\n      children: _jsx(IndexHeader, {\n        menu: navigation,\n        showMenu: isMenuVisible,\n        changeMenu: changeMenuVisibility\n      })\n    });\n  }\n}","map":{"version":3,"names":["IndexHeader","useState","TouchableOpacity","style","jsx","_jsx","Index","_ref","navigation","_useState","_useState2","_slicedToArray","isLogged","setIsLogged","_useState3","_useState4","isMenuVisible","setMenuVisibility","changeMenuVisibility","main","onPress","children","menu","showMenu","changeMenu"],"sources":["/home/ivaylokartev/SL-devel/Frontend-Mobile/pages/uindex.tsx"],"sourcesContent":["import IndexHeader from \"../components/indexheader\";\nimport { useState, useEffect } from \"react\";\nimport { View, TouchableOpacity, TouchableWithoutFeedback } from \"react-native\";\nimport { style } from \"../stylesheets/indexstyle\";\n\nexport default function Index({navigation} : any) {\n\n    const [isLogged, setIsLogged] = useState(true);\n\n    const [isMenuVisible, setMenuVisibility] = useState(false);\n\n    function changeMenuVisibility() {\n        if(isMenuVisible) setMenuVisibility(!isMenuVisible)\n    }\n\n    if(isLogged) {\n        return (\n            <TouchableOpacity style={[style.main]} onPress={changeMenuVisibility}>\n                <IndexHeader menu={navigation} showMenu={isMenuVisible} changeMenu={changeMenuVisibility}/>\n            </TouchableOpacity>\n        )\n    }\n}"],"mappings":";AAAA,OAAOA,WAAW;AAClB,SAASC,QAAQ,QAAmB,OAAO;AAAC,OAAAC,gBAAA;AAE5C,SAASC,KAAK;AAAoC,SAAAC,GAAA,IAAAC,IAAA;AAElD,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAAqB;EAAA,IAAnBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAErC,IAAAC,SAAA,GAAgCR,QAAQ,CAAC,IAAI,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5B,IAAAI,UAAA,GAA2Cb,QAAQ,CAAC,KAAK,CAAC;IAAAc,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAnDE,aAAa,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EAEvC,SAASG,oBAAoBA,CAAA,EAAG;IAC5B,IAAGF,aAAa,EAAEC,iBAAiB,CAAC,CAACD,aAAa,CAAC;EACvD;EAEA,IAAGJ,QAAQ,EAAE;IACT,OACIP,IAAA,CAACH,gBAAgB;MAACC,KAAK,EAAE,CAACA,KAAK,CAACgB,IAAI,CAAE;MAACC,OAAO,EAAEF,oBAAqB;MAAAG,QAAA,EACjEhB,IAAA,CAACL,WAAW;QAACsB,IAAI,EAAEd,UAAW;QAACe,QAAQ,EAAEP,aAAc;QAACQ,UAAU,EAAEN;MAAqB,CAAC;IAAC,CAC7E,CAAC;EAE3B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
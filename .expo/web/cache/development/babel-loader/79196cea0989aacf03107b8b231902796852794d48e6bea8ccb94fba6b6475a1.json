{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport IndexHeader from \"../components/indexheader\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { style } from \"../stylesheets/indexstyle\";\nimport PageTitle from \"../components/pagetitle\";\nimport { useFonts } from \"expo-font\";\nimport DietTab from \"../components/indextab\";\nimport ExerciseTab from \"../components/trainingtab\";\nimport UserMenu from \"../components/usermenu\";\nimport NavBar from \"../components/navbar\";\nimport Circles from \"../components/circles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Index(_ref) {\n  var navigation = _ref.navigation;\n  var curDate = new Date();\n  var dayWeek = convertIndexToWord(curDate.getDay());\n  function convertIndexToWord(index) {\n    if (index === 0) return 'Monday';else if (index === 1) return 'Tuesday';else if (index === 2) return 'Wednesday';else if (index === 3) return 'Thursday';else if (index === 4) return 'Friday';else if (index === 5) return 'Saturday';else if (index === 6) return 'Sunday';\n  }\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLogged = _useState2[0],\n    setIsLogged = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isMenuVisible = _useState4[0],\n    setMenuVisibility = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isCirclesVisible = _useState6[0],\n    setCirclesVisibility = _useState6[1];\n  function changeMenuVisibility() {\n    setMenuVisibility(!isMenuVisible);\n  }\n  function changeMenuVisibilityWhenUnFocus() {\n    setMenuVisibility(false);\n  }\n  function changeCirclesVisibility() {\n    setCirclesVisibility(!isCirclesVisible);\n  }\n  function changeCirclesVisibilityWhenUnfocused() {\n    setCirclesVisibility(false);\n  }\n  var _useFonts = useFonts({\n      'ProDunex': require(\"../assets/fonts/ProDunex/pro-dunex-52272284/Pro-Dunex-Regular.otf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    loadedfonts = _useFonts2[0];\n  if (isLogged) {\n    return _jsxs(TouchableOpacity, {\n      style: [style.main],\n      onPress: function onPress() {\n        changeMenuVisibilityWhenUnFocus();\n        changeCirclesVisibilityWhenUnfocused;\n      },\n      children: [_jsx(IndexHeader, {\n        menu: navigation,\n        showMenu: isMenuVisible,\n        changeMenu: changeMenuVisibility\n      }), _jsx(PageTitle, {\n        text: \"Welcome again\"\n      }), _jsxs(View, {\n        style: style.tab_wrapper,\n        children: [_jsx(DietTab, {\n          progress: 81\n        }), _jsx(ExerciseTab, {\n          navigation: navigation\n        })]\n      }), _jsx(UserMenu, {\n        isVisible: isMenuVisible,\n        menu: navigation\n      }), _jsx(NavBar, {\n        setVisibility: setCirclesVisibility\n      }), _jsx(Circles, {\n        visible: isCirclesVisible\n      })]\n    });\n  }\n}","map":{"version":3,"names":["IndexHeader","useState","View","TouchableOpacity","style","PageTitle","useFonts","DietTab","ExerciseTab","UserMenu","NavBar","Circles","jsx","_jsx","jsxs","_jsxs","Index","_ref","navigation","curDate","Date","dayWeek","convertIndexToWord","getDay","index","_useState","_useState2","_slicedToArray","isLogged","setIsLogged","_useState3","_useState4","isMenuVisible","setMenuVisibility","_useState5","_useState6","isCirclesVisible","setCirclesVisibility","changeMenuVisibility","changeMenuVisibilityWhenUnFocus","changeCirclesVisibility","changeCirclesVisibilityWhenUnfocused","_useFonts","require","_useFonts2","loadedfonts","main","onPress","children","menu","showMenu","changeMenu","text","tab_wrapper","progress","isVisible","setVisibility","visible"],"sources":["/home/ivaylokartev/SL-devel/SL-1/Frontend-Mobile/pages/uindex.tsx"],"sourcesContent":["import IndexHeader from \"../components/indexheader\";\nimport { useState, useEffect } from \"react\";\nimport { View, TouchableOpacity, TouchableWithoutFeedback, ScrollView } from \"react-native\";\nimport { style } from \"../stylesheets/indexstyle\";\nimport ExerciseCard from \"../components/trainingexercisecard\";\nimport PageTitle from \"../components/pagetitle\";\nimport { useFonts } from \"expo-font\";\nimport DietTab from \"../components/indextab\";\nimport ExerciseTab from \"../components/trainingtab\";\nimport UserMenu from \"../components/usermenu\";\nimport NavBar from \"../components/navbar\";\nimport Circles from \"../components/circles\";\n\nexport default function Index({navigation} : any) {\n\n    const curDate = new Date();\n    const dayWeek = convertIndexToWord(curDate.getDay());\n\n    function convertIndexToWord(index : Number) {\n        if(index === 0) return 'Monday'\n        else if (index === 1) return 'Tuesday'\n        else if (index === 2) return 'Wednesday'\n        else if (index === 3) return 'Thursday'\n        else if (index === 4) return 'Friday'\n        else if (index === 5) return 'Saturday'\n        else if (index === 6) return 'Sunday'\n    }\n\n    const [isLogged, setIsLogged] = useState(true);\n\n    const [isMenuVisible, setMenuVisibility] = useState(false);\n    const [isCirclesVisible, setCirclesVisibility] = useState(false);\n\n    function changeMenuVisibility() {\n        setMenuVisibility(!isMenuVisible)\n    }\n\n    function changeMenuVisibilityWhenUnFocus() {\n        setMenuVisibility(false)\n    }\n\n    function changeCirclesVisibility() {\n        setCirclesVisibility(!isCirclesVisible)\n    }\n\n    function changeCirclesVisibilityWhenUnfocused() {\n        setCirclesVisibility(false);\n    }\n\n    const [loadedfonts] = useFonts({\n        'ProDunex' : require('../assets/fonts/ProDunex/pro-dunex-52272284/Pro-Dunex-Regular.otf')\n    });\n\n    if(isLogged) {\n        return (\n            <TouchableOpacity style={[style.main]} onPress={() => {changeMenuVisibilityWhenUnFocus(); changeCirclesVisibilityWhenUnfocused}}>\n                <IndexHeader menu={navigation} showMenu={isMenuVisible} changeMenu={changeMenuVisibility}/>\n                <PageTitle text='Welcome again'></PageTitle>\n                <View style={style.tab_wrapper}>\n                    <DietTab progress={81}></DietTab>\n                    <ExerciseTab navigation={navigation}></ExerciseTab>\n                </View>\n                <UserMenu isVisible={isMenuVisible} menu={navigation}/>\n                <NavBar setVisibility={setCirclesVisibility}/>\n                <Circles visible={isCirclesVisible}/>               \n            </TouchableOpacity>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
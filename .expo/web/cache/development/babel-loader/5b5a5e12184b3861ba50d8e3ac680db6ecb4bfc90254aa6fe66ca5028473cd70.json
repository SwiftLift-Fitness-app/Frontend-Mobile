{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faBolt, faClock, faCalendar, faChartLine } from '@fortawesome/free-solid-svg-icons';\nimport { useFonts } from \"expo-font\";\nimport { style } from \"../stylesheets/enjoystyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Enjoy() {\n  var _useFonts = useFonts({\n      'Ubuntu': require(\"../assets/fonts/Ubuntu/Ubuntu-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    loadedfonts = _useFonts2[0];\n  if (!loadedfonts) {\n    return _jsx(Text, {\n      children: \"Loading ...\"\n    });\n  }\n  return _jsxs(View, {\n    style: style.container,\n    children: [_jsxs(View, {\n      style: style.grid,\n      children: [_jsx(FontAwesomeIcon, {\n        icon: faCalendar,\n        style: [style.icons],\n        size: 25\n      }), _jsx(Text, {\n        style: style.tipstext,\n        children: \"Personalized training program\"\n      })]\n    }), _jsxs(View, {\n      style: style.grid,\n      children: [_jsx(FontAwesomeIcon, {\n        icon: faClock,\n        style: style.icons,\n        size: 25\n      }), _jsx(Text, {\n        style: style.tipstext,\n        children: \"Track your training in real time\"\n      })]\n    }), _jsxs(View, {\n      style: style.grid,\n      children: [_jsx(FontAwesomeIcon, {\n        icon: faBolt,\n        style: style.tipstext,\n        size: 25\n      }), _jsx(Text, {\n        style: style.tipstext,\n        children: \"Analyze your performance\"\n      })]\n    }), _jsxs(View, {\n      style: style.grid,\n      children: [_jsx(FontAwesomeIcon, {\n        icon: faChartLine,\n        style: style.tipstext,\n        size: 25\n      }), _jsx(Text, {\n        style: style.tipstext,\n        children: \"Improve!\"\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","View","Text","FontAwesomeIcon","faBolt","faClock","faCalendar","faChartLine","useFonts","style","jsx","_jsx","jsxs","_jsxs","Enjoy","_useFonts","require","_useFonts2","_slicedToArray","loadedfonts","children","container","grid","icon","icons","size","tipstext"],"sources":["/home/ivaylokartev/SL-devel/Frontend-Mobile/components/cools.tsx"],"sourcesContent":["import React from \"react\";\nimport { View, Text } from \"react-native\";\nimport {FontAwesomeIcon} from '@fortawesome/react-native-fontawesome';\nimport {faBolt, faClock, faCalendar, faChartLine} from '@fortawesome/free-solid-svg-icons';\nimport { useFonts } from \"expo-font\";\nimport { style } from \"../stylesheets/enjoystyle\";\n\nexport default function Enjoy() {\n\n    const [loadedfonts] = useFonts({\n        'Ubuntu' : require('../assets/fonts/Ubuntu/Ubuntu-Regular.ttf')\n    });\n\n    if(!loadedfonts) {\n        return <Text>Loading ...</Text>\n    }\n\n    return (\n        <View style={style.container}>\n            <View style={style.grid}>\n                <FontAwesomeIcon icon={faCalendar} style={[style.icons]} size={25}></FontAwesomeIcon>\n                <Text style={style.tipstext}>Personalized training program</Text>\n            </View>\n            <View style={style.grid}>\n                <FontAwesomeIcon icon={faClock} style={style.icons} size={25}></FontAwesomeIcon>\n                <Text style={style.tipstext}>Track your training in real time</Text>\n            </View>\n            <View style={style.grid}>\n                <FontAwesomeIcon icon={faBolt} style={style.tipstext} size={25}></FontAwesomeIcon>\n                <Text style={style.tipstext}>Analyze your performance</Text>\n            </View>\n            <View style={style.grid}>\n                <FontAwesomeIcon icon={faChartLine} style={style.tipstext} size={25}></FontAwesomeIcon>\n                <Text style={style.tipstext}>Improve!</Text>\n            </View>\n        </View>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE1B,SAAQC,eAAe,QAAO,uCAAuC;AACrE,SAAQC,MAAM,EAAEC,OAAO,EAAEC,UAAU,EAAEC,WAAW,QAAO,mCAAmC;AAC1F,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,KAAK;AAAoC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElD,eAAe,SAASC,KAAKA,CAAA,EAAG;EAE5B,IAAAC,SAAA,GAAsBP,QAAQ,CAAC;MAC3B,QAAQ,EAAGQ,OAAO,4CAA4C;IAClE,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAFKI,WAAW,GAAAF,UAAA;EAIlB,IAAG,CAACE,WAAW,EAAE;IACb,OAAOR,IAAA,CAACT,IAAI;MAAAkB,QAAA,EAAC;IAAW,CAAM,CAAC;EACnC;EAEA,OACIP,KAAA,CAACZ,IAAI;IAACQ,KAAK,EAAEA,KAAK,CAACY,SAAU;IAAAD,QAAA,GACzBP,KAAA,CAACZ,IAAI;MAACQ,KAAK,EAAEA,KAAK,CAACa,IAAK;MAAAF,QAAA,GACpBT,IAAA,CAACR,eAAe;QAACoB,IAAI,EAAEjB,UAAW;QAACG,KAAK,EAAE,CAACA,KAAK,CAACe,KAAK,CAAE;QAACC,IAAI,EAAE;MAAG,CAAkB,CAAC,EACrFd,IAAA,CAACT,IAAI;QAACO,KAAK,EAAEA,KAAK,CAACiB,QAAS;QAAAN,QAAA,EAAC;MAA6B,CAAM,CAAC;IAAA,CAC/D,CAAC,EACPP,KAAA,CAACZ,IAAI;MAACQ,KAAK,EAAEA,KAAK,CAACa,IAAK;MAAAF,QAAA,GACpBT,IAAA,CAACR,eAAe;QAACoB,IAAI,EAAElB,OAAQ;QAACI,KAAK,EAAEA,KAAK,CAACe,KAAM;QAACC,IAAI,EAAE;MAAG,CAAkB,CAAC,EAChFd,IAAA,CAACT,IAAI;QAACO,KAAK,EAAEA,KAAK,CAACiB,QAAS;QAAAN,QAAA,EAAC;MAAgC,CAAM,CAAC;IAAA,CAClE,CAAC,EACPP,KAAA,CAACZ,IAAI;MAACQ,KAAK,EAAEA,KAAK,CAACa,IAAK;MAAAF,QAAA,GACpBT,IAAA,CAACR,eAAe;QAACoB,IAAI,EAAEnB,MAAO;QAACK,KAAK,EAAEA,KAAK,CAACiB,QAAS;QAACD,IAAI,EAAE;MAAG,CAAkB,CAAC,EAClFd,IAAA,CAACT,IAAI;QAACO,KAAK,EAAEA,KAAK,CAACiB,QAAS;QAAAN,QAAA,EAAC;MAAwB,CAAM,CAAC;IAAA,CAC1D,CAAC,EACPP,KAAA,CAACZ,IAAI;MAACQ,KAAK,EAAEA,KAAK,CAACa,IAAK;MAAAF,QAAA,GACpBT,IAAA,CAACR,eAAe;QAACoB,IAAI,EAAEhB,WAAY;QAACE,KAAK,EAAEA,KAAK,CAACiB,QAAS;QAACD,IAAI,EAAE;MAAG,CAAkB,CAAC,EACvFd,IAAA,CAACT,IAAI;QAACO,KAAK,EAAEA,KAAK,CAACiB,QAAS;QAAAN,QAAA,EAAC;MAAQ,CAAM,CAAC;IAAA,CAC1C,CAAC;EAAA,CACL,CAAC;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { style } from \"../stylesheets/loginstyle\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { faFacebook, faGoogle, faMicrosoft } from \"@fortawesome/free-brands-svg-icons\";\nimport { useState, useEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLogged = _useState2[0],\n    setIsLogged = _useState2[1];\n  return _jsxs(View, {\n    style: style.body,\n    children: [_jsx(ImageBackground, {\n      source: require(\"../img/wavec.png\"),\n      style: style.backi,\n      children: _jsx(Text, {\n        style: style.signlabel,\n        children: \"Login to your account\"\n      })\n    }), _jsxs(View, {\n      style: style.dummy,\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter your email\",\n        style: style.textbox\n      }), _jsx(TextInput, {\n        placeholder: \"Enter password\",\n        style: style.textbox\n      }), _jsx(Pressable, {\n        style: style.logbtn,\n        onPress: _asyncToGenerator(function* () {\n          navigation.navigate('Index');\n        }),\n        children: _jsx(Text, {\n          style: style.whitetext,\n          children: \"Log In\"\n        })\n      }), _jsx(Text, {\n        children: \"Or\"\n      }), _jsxs(View, {\n        style: style.signfield,\n        children: [_jsx(Pressable, {\n          style: style.logbtng,\n          children: _jsx(FontAwesomeIcon, {\n            icon: faGoogle,\n            color: \"white\",\n            size: 30\n          })\n        }), _jsx(Pressable, {\n          style: style.logbtnf,\n          children: _jsx(FontAwesomeIcon, {\n            icon: faFacebook,\n            color: \"white\",\n            size: \"30\"\n          })\n        }), _jsx(Pressable, {\n          style: style.logbtnm,\n          children: _jsx(FontAwesomeIcon, {\n            icon: faMicrosoft,\n            color: \"white\",\n            size: \"30\"\n          })\n        })]\n      }), _jsx(Text, {\n        onPress: function onPress() {\n          return navigation.navigate('Signup');\n        },\n        style: style.signuptext,\n        children: \"Don't have an account? Sign Up\"\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","View","Text","TextInput","Pressable","Image","ImageBackground","style","FontAwesomeIcon","faFacebook","faGoogle","faMicrosoft","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","_useState","_useState2","_slicedToArray","isLogged","setIsLogged","body","children","source","require","backi","signlabel","dummy","placeholder","textbox","logbtn","onPress","_asyncToGenerator","navigate","whitetext","signfield","logbtng","icon","color","size","logbtnf","logbtnm","signuptext"],"sources":["/home/ivaylokartev/SL-devel/Frontend-Mobile/pages/login.js"],"sourcesContent":["import React from \"react\";\nimport { View, Text, TextInput, Pressable, Image, ImageBackground } from \"react-native\";\nimport { style } from \"../stylesheets/loginstyle\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { faFacebook, faGoogle, faMicrosoft } from \"@fortawesome/free-brands-svg-icons\";\nimport { useState, useEffect } from \"react\";\n\nexport default function Login({navigation}) {\n\n    const [isLogged, setIsLogged] = useState(false);\n    \n    return (\n        <View style={style.body}>\n            <ImageBackground source={require('../img/wavec.png')} style={style.backi}>\n                <Text style={style.signlabel}>Login to your account</Text>\n            </ImageBackground>\n            <View style={style.dummy}>\n                <TextInput placeholder=\"Enter your email\" style={style.textbox}></TextInput>\n                <TextInput placeholder=\"Enter password\" style={style.textbox}></TextInput>\n                <Pressable style={style.logbtn} onPress={ async () => { /* await (implement log in system) navigation to index is just for testing the Index page */ navigation.navigate('Index')}}><Text style={style.whitetext}>Log In</Text></Pressable>\n                <Text>Or</Text>\n                <View style={style.signfield}>\n                    <Pressable style={style.logbtng}><FontAwesomeIcon icon={faGoogle} color=\"white\" size={30}></FontAwesomeIcon></Pressable>\n                    <Pressable style={style.logbtnf}><FontAwesomeIcon icon={faFacebook} color=\"white\" size='30'></FontAwesomeIcon></Pressable>\n                    <Pressable style={style.logbtnm}><FontAwesomeIcon icon={faMicrosoft} color=\"white\" size='30'></FontAwesomeIcon></Pressable>\n                </View>\n                <Text onPress={() => navigation.navigate('Signup')} style={style.signuptext}>Don't have an account? Sign Up</Text>\n            </View>\n        </View>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}